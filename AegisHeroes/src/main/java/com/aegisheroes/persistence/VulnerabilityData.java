package com.aegisheroes.persistence;

import com.aegisheroes.entity.Vulnerability;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

/**
 * Access users in the user table.
 *
 * @author pwaite
 */
public class VulnerabilityData {

    private final Logger logger = LogManager.getLogger(this.getClass());

    /**
     * Gets all users.
     *
     * @return the all users
     */
    public List<Vulnerability> getAllUsers() {

        String sql = "SELECT * FROM user";
        logger.info("getAllUsers sql: " + sql);
        return executeQuery(sql);

    }

    /**
     * Gets users by last name.
     *
     * @param lastName the last name
     * @return the users by last name
     */
    public List<Vulnerability> getUsersByLastName(String lastName) {

        String sql = "SELECT * FROM user WHERE last_name like '%" + lastName + "%'";
        return executeQuery(sql);

    }

    private List<Vulnerability> executeQuery(String sql) {

        List<Vulnerability> vulnerabilities = new ArrayList<>();
        Database database = Database.getInstance();
        Connection connection = null;
        try {
            database.connect();
            connection = database.getConnection();
            Statement selectStatement = connection.createStatement();
            ResultSet results = selectStatement.executeQuery(sql);
            while (results.next()) {
                Vulnerability report = createUserFromResults(results);
                vulnerabilities.add(report);
            }
            database.disconnect();

        } catch (SQLException sqle) {

            logger.error("UserData.getAllUsers()...SQLException: ", sqle);

        } catch (Exception e) {

            logger.error("UserData.getAllUsers()...Exception: ", e);

        }

        return vulnerabilities;

    }

    /**
     * Create and return a user from the resultset.
     *
     * @param results
     * @return user
     * @throws SQLException
     */
    private Vulnerability createUserFromResults(ResultSet results) throws SQLException {
        Vulnerability vulnerability = new Vulnerability();
        vulnerability.setLastName(results.getString("last_name"));
        vulnerability.setFirstName(results.getString("first_name"));
        vulnerability.setUserName(results.getString("user_name"));
        vulnerability.setDateOfBirth(results.getDate("date_of_birth").toLocalDate());
        vulnerability.setId(results.getInt("id"));
        return vulnerability;
    }

}
